---
import { getCollection } from "astro:content";
import BlogPost from "../../client/blog/blog-post.svelte"
import BlogPostBig from "../../client/blog/blog-post-big.svelte"
import BasicMeta from "../meta/basic-meta.astro";

const blog = await getCollection('blog')
let posts : any[] = []
let categories = new Map<string, any[]>()

blog.forEach(post => {
    const category = post.id.split("/")[0]

    if (!categories.has(category)) {
        categories.set(category, [])
    }

    posts.push(post)
    categories.get(category)?.push(post)
})

posts.sort((a : any, b : any) => {
    return a.data.date.getUTCDate() - b.data.date.getUTCDate() 
})
const mostRecentPost = posts[0]
---
<BasicMeta page="blog" />

<div class="lower-shelf">
    <div id="recent-post">
        <BlogPostBig client:load post={mostRecentPost}/>
    </div>
    <div id="other-posts">
        { posts.slice(1).map(post => 
            <BlogPost client:load post={post} />
        )}
    </div>
</div>

<script>
    function navigatePost(id : string) {

    }
</script>
